//
//  OptionsViewController.swift
//  SpringApp
//
//  Created by Alexey Efimov on 17.04.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SpringAnimation

protocol OptionsDisplayLogic: AnyObject {
    func displayOptions(viewModel: OptionsViewModel)
}

protocol OptionsViewControllerDelegate: AnyObject {
    func dampingSliderChanged(_ sender: AnyObject)
    func velocitySliderChanged(_ sender: AnyObject)
    func scaleSliderChanged(_ sender: AnyObject)
    func xSliderChanged(_ sender: AnyObject)
    func ySliderChanged(_ sender: AnyObject)
    func rotateSliderChanged(_ sender: AnyObject)
    func resetButtonPressed(_ sender: AnyObject)
}

class OptionsViewController: UIViewController {
    
    @IBOutlet weak var modalView: SpringView!
    
    @IBOutlet weak var dampingLabel: UILabel!
    @IBOutlet weak var velocityLabel: UILabel!
    @IBOutlet weak var scaleLabel: UILabel!
    @IBOutlet weak var xLabel: UILabel!
    @IBOutlet weak var yLabel: UILabel!
    @IBOutlet weak var rotateLabel: UILabel!
    
    @IBOutlet weak var dampingSlider: UISlider!
    @IBOutlet weak var velocitySlider: UISlider!
    @IBOutlet weak var scaleSlider: UISlider!
    @IBOutlet weak var xSlider: UISlider!
    @IBOutlet weak var ySlider: UISlider!
    @IBOutlet weak var rotateSlider: UISlider!
        
    var interactor: OptionsBusinessLogic?
    var router: (NSObjectProtocol & OptionsRoutingLogic & OptionsDataPassing)?
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        let tapGesture = UITapGestureRecognizer(target: self, action: #selector(tapAction))
        view.addGestureRecognizer(tapGesture)
    }

    @IBAction func dampingSliderChanged(_ sender: AnyObject) {
        
    }
    
    @IBAction func velocitySliderChanged(_ sender: AnyObject) {
        
    }
    
    @IBAction func scaleSliderChanged(_ sender: AnyObject) {
        
    }
    
    @IBAction func xSliderChanged(_ sender: AnyObject) {
        
    }
    
    @IBAction func ySliderChanged(_ sender: AnyObject) {
        
    }
    
    @IBAction func rotateSliderChanged(_ sender: AnyObject) {
        
    }
    
    @IBAction func resetButtonPressed(_ sender: AnyObject) {

    }
    
    @objc private func tapAction() {
        dismiss(animated: true)
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = OptionsInteractor()
        let presenter = OptionsPresenter()
        let router = OptionsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
}

extension OptionsViewController: OptionsDisplayLogic {
    func displayOptions(viewModel: Options.Animate.ViewModel) {
        
    }
}
